{"version":3,"file":"static/js/637.68857ada.chunk.js","mappings":"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","sources":["components/Contact/Contact.styled.ts","components/UpdateContactForm/UpdateContactForm.styled.ts","components/UpdateContactForm/UpdateContactForm.tsx","components/Contact/Contact.tsx","components/ContactList/ContactList.styled.ts","components/ContactList/ContactList.tsx","components/Filter/Filter.styled.ts","components/Filter/Filter.tsx","pages/Contacts/Contacts.styled.ts","pages/Contacts/Contacts.tsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { mq } from 'constants/mediaConstants';\n\nexport const ContactStyled = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  p {\n    margin-bottom: ${p => p.theme.space[1]}px;\n    text-transform: capitalize;\n    font-weight: ${p => p.theme.fontWeight.semiBold};\n    font-size: ${p => p.theme.fontSizes.s};\n    line-height: 1.18;\n  }\n\n  ${mq.medium} {\n    margin-bottom: 0;\n    font-size: ${p => p.theme.fontSizes.s};\n\n    :not(:last-of-type) {\n      margin-right: ${p => p.theme.space[3]}px;\n    }\n  }\n\n  ${mq.large} {\n    font-size: ${p => p.theme.fontSizes.m};\n  }\n`;\n","import styled from '@emotion/styled';\nimport { mq } from 'constants/mediaConstants';\n\nexport const Form = styled.form`\n  width: 100%;\n`;\n\nexport const Title = styled.h2`\n  display: block;\n  margin-bottom: ${p => p.theme.space[3]}px;\n  font-weight: ${p => p.theme.fontWeight.bold};\n  font-size: ${p => p.theme.fontSizes.s};\n  line-height: 1.18;\n  letter-spacing: 0.05em;\n  color: ${p => p.theme.colors.accentTextColor};\n  text-align: center;\n\n  ${mq.medium} {\n    font-size: ${p => p.theme.fontSizes.m};\n  }\n\n  ${mq.large} {\n    font-size: ${p => p.theme.fontSizes.l};\n  }\n`;\n","import { useForm, SubmitHandler } from 'react-hook-form'; // Forms\nimport { yupResolver } from '@hookform/resolvers/yup'; // for React-hook-form work with Yup\nimport * as yup from 'yup'; // Form validation\nimport { Box } from 'components/Box/Box';\nimport { Button } from 'components/Button/Button';\nimport { Form, Title } from './UpdateContactForm.styled';\nimport { IContact } from 'types/contacts';\nimport { Input } from '../Input/Input';\nimport { updateContact } from 'redux/contacts/contactsOperations';\nimport { useAppDispatch } from 'redux/hooks';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '',\n};\n\nconst validationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .min(4, 'Name should be at least 4 characters')\n    .max(20, 'Name should be at most 20 characters')\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required('Name is required'),\n  number: yup\n    .string()\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required('Number is required'),\n});\n\ninterface IProps {\n  name: string;\n  number: string;\n  id: string;\n  closeModal: () => void;\n}\n\nexport const UpdateContactForm: React.FC<IProps> = ({\n  name,\n  number,\n  id,\n  closeModal,\n}) => {\n  const dispatch = useAppDispatch();\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm<Omit<IContact, 'id'>>({\n    defaultValues: { ...INITIAL_STATE, name, number },\n    resolver: yupResolver(validationSchema),\n  });\n\n  const onSubmit: SubmitHandler<Omit<IContact, 'id'>> = data => {\n    dispatch(updateContact({ ...data, id }));\n    closeModal();\n    reset();\n  };\n\n  return (\n    <>\n      <Title>Update Contact</Title>\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <Input\n          name=\"name\"\n          placeholder=\"Name\"\n          register={register}\n          error={errors.name}\n        />\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Phone number\"\n          register={register}\n          error={errors.number}\n        />\n        <Box\n          display={['flex']}\n          justifyContent={'space-between'}\n          maxWidth=\"220px\"\n          mx=\"auto\"\n          flexDirection={['column', 'column', 'row', 'row']}\n          gridGap=\"16px\"\n        >\n          <Button type=\"submit\" name=\"primary\">\n            Update\n          </Button>\n          <Button name=\"primary\" onClick={closeModal}>\n            Cancel\n          </Button>\n        </Box>\n      </Form>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport { Box } from 'components/Box/Box';\nimport { Button } from 'components/Button/Button';\nimport { ContactStyled } from './Contact.styled';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\nimport { Modal } from 'components/Modal/Modal';\nimport { UpdateContactForm } from 'components/UpdateContactForm/UpdateContactForm';\nimport { useAppDispatch } from 'redux/hooks';\n\ninterface IProps {\n  name: string;\n  number: string;\n  id: string;\n}\n\nexport const Contact: React.FC<IProps> = ({ name, number, id }) => {\n  const dispatch = useAppDispatch();\n  const [modalIsOpen, setModalIsOpen] = useState<boolean>(false);\n  const toggleModal = () => setModalIsOpen(prevModalState => !prevModalState);\n\n  return (\n    <>\n      <ContactStyled>\n        <Box\n          display=\"flex\"\n          flexWrap=\"wrap\"\n          justifyContent=\"center\"\n          gridGap=\"8px\"\n        >\n          <p>{name}:</p>\n          <p>{number}</p>\n        </Box>\n        <Box\n          display=\"flex\"\n          flexWrap=\"wrap\"\n          gridGap=\"16px\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n        >\n          <Button onClick={() => toggleModal()}>Update</Button>\n          <Button onClick={() => dispatch(deleteContact(id))}>Delete</Button>\n        </Box>\n      </ContactStyled>\n      {modalIsOpen && (\n        <Modal closeModal={toggleModal}>\n          <UpdateContactForm\n            closeModal={toggleModal}\n            name={name}\n            id={id}\n            number={number}\n          />\n        </Modal>\n      )}\n    </>\n  );\n};\n","import styled from '@emotion/styled';\nimport { mq } from 'constants/mediaConstants';\n\nexport const Contacts = styled.ul`\n  list-style: none;\n  margin-bottom: ${p => p.theme.space[4]}px;\n\n  li {\n    padding: ${p => p.theme.space[3]}px;\n    border-radius: ${p => p.theme.space[1]}px;\n    box-shadow: ${p => p.theme.boxShadow.first};\n    background-color: ${p => p.theme.colors.backgroundContactCardColor};\n\n    :not(:last-of-type) {\n      margin-bottom: ${p => p.theme.space[2]}px;\n    }\n\n    ${mq.medium} {\n      padding: ${p => p.theme.space[3]}px;\n    }\n\n    ${mq.large} {\n      padding: ${p => p.theme.space[4]}px;\n    }\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { Contact } from '../Contact/Contact';\nimport { Contacts } from './ContactList.styled';\nimport { contactsSelectors } from 'redux/contacts/contactsSelectors';\n\nexport const ContactList: React.FC = () => {\n  const filteredContacts = useSelector(\n    contactsSelectors.selectFilteredContacts\n  );\n\n  return (\n    <Contacts>\n      {filteredContacts.map(({ name, number, id }) => (\n        <li key={id}>\n          <Contact name={name} number={number} id={id} />\n        </li>\n      ))}\n    </Contacts>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const FilterLabelStyled = styled.label`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin-bottom: ${p => p.theme.space[4]}px;\n  width: 100%;\n  font-size: ${p => p.theme.fontSizes.s};\n  font-weight: ${p => p.theme.fontWeight.semiBold};\n\n  input {\n    margin-top: ${p => p.theme.space[1]}px;\n    padding: ${p => p.theme.space[2]}px;\n    outline: transparent;\n    border: ${p => p.theme.borders.normal} ${p => p.theme.colors.inputText};\n    border-radius: ${p => p.theme.radii.normal};\n    transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    &:focus {\n      border-color: ${p => p.theme.colors.secondaryColor};\n    }\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { changeFilter } from 'redux/filter/filterSlice';\nimport { FilterLabelStyled } from './Filter.styled';\nimport { selectFilter } from 'redux/filter/filterSelectors';\nimport { useAppDispatch } from 'redux/hooks';\n\nexport const Filter: React.FC = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useAppDispatch();\n\n  return (\n    <FilterLabelStyled>\n      Find contacts by name\n      <input\n        type=\"text\"\n        value={filter}\n        onChange={event => dispatch(changeFilter(event.target.value))}\n      />\n    </FilterLabelStyled>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Text = styled.p`\n  padding: ${p => p.theme.space[3]}px ${p => p.theme.space[0]}px;\n  font-size: ${p => p.theme.fontSizes.s};\n  font-weight: ${p => p.theme.fontWeight.semiBold};\n`;\n","import { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { contactsSelectors } from 'redux/contacts/contactsSelectors';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\nimport { Filter } from 'components/Filter/Filter';\nimport { LinkStyled } from 'components/Navigation/NavLink/NavLink.styled';\nimport { Loader } from 'components/Loader/Loader';\nimport { Section } from 'components/Section/Section';\nimport { Text } from './Contacts.styled';\nimport { useAppDispatch } from 'redux/hooks';\n\nconst Contacts = () => {\n  const contacts = useSelector(contactsSelectors.selectContacts);\n  const isLoading = useSelector(contactsSelectors.selectLoading);\n  const filteredContacts = useSelector(\n    contactsSelectors.selectFilteredContacts\n  );\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Section title=\"Contacts\">\n      {contacts?.length > 0 && <Filter />}\n      <Loader isLoading={isLoading} />\n      {filteredContacts.length > 0 ? (\n        <ContactList />\n      ) : (\n        <Text>There are no contacts</Text>\n      )}\n      <LinkStyled to=\"/newContact\">Add new contact</LinkStyled>\n    </Section>\n  );\n};\n\nexport default Contacts;\n"],"names":["ContactStyled","styled","p","theme","space","fontWeight","semiBold","fontSizes","s","mq","m","Form","Title","bold","colors","accentTextColor","l","INITIAL_STATE","name","number","validationSchema","yup","shape","min","max","matches","required","UpdateContactForm","id","closeModal","dispatch","useAppDispatch","useForm","defaultValues","resolver","yupResolver","register","handleSubmit","reset","errors","formState","onSubmit","data","updateContact","Input","I","placeholder","error","type","Box","display","justifyContent","maxWidth","mx","flexDirection","gridGap","Button","onClick","Contact","useState","modalIsOpen","setModalIsOpen","toggleModal","prevModalState","flexWrap","alignItems","deleteContact","Modal","Contacts","boxShadow","first","backgroundContactCardColor","ContactList","filteredContacts","useSelector","contactsSelectors","map","FilterLabelStyled","borders","normal","inputText","radii","secondaryColor","Filter","filter","selectFilter","value","onChange","event","changeFilter","target","Text","contacts","isLoading","useEffect","fetchContacts","Section","title","length","Loader","to"],"sourceRoot":""}